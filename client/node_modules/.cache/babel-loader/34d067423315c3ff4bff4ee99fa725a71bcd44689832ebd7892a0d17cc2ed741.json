{"ast":null,"code":"const API_URl='http://localhost:8000';async function httpGetPlanets(){const response=await fetch(\"\".concat(API_URl,\"/planets\"));return await response.json();}async function httpGetLaunches(){// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nconst response=await fetch(\"\".concat(API_URl,\"/launches\"));const fetchedLaunches=await response.json();return fetchedLaunches.sort((a,b)=>{return a.flightNumber-b.flightNumber;});}async function httpSubmitLaunch(launch){try{return await fetch(\"\".concat(API_URl,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":'application/json'},body:JSON.stringify(launch)});}catch(err){return{ok:false};}}async function httpAbortLaunch(id){// TODO: Once API is ready.\n// Delete launch with given ID.\ntry{return await fetch(\"\".concat(API_URl,\"/launches/\").concat(id),{method:'delete'});}catch(error){return{ok:false};}}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URl","httpGetPlanets","response","fetch","concat","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id","error"],"sources":["/Users/tanmayrokde/Documents/nasa project/client/src/hooks/requests.js"],"sourcesContent":["const API_URl = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n\n  const response = await fetch(`${API_URl}/planets`);\n  return await response.json();\n\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URl}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{return await fetch(`${API_URl}/launches`, {\n    method: \"post\",\n    headers :{\n      \"Content-Type\":'application/json',\n    },\n    body:JSON.stringify(launch),\n  })\n  }\n  catch(err) {\n    return {\n      ok: false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  try{return await fetch(`${API_URl}/launches/${id}`, {\n    method :'delete',\n  })\n  } catch(error) {\n    return {\n      ok :false,\n    }\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,uBAAuB,CAEvC,cAAe,CAAAC,cAAcA,CAAA,CAAG,CAE9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIJ,OAAO,YAAU,CAAC,CAClD,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAE9B,CAEA,cAAe,CAAAC,eAAeA,CAAA,CAAG,CAC/B;AACA;AACA,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIJ,OAAO,aAAW,CAAC,CACnD,KAAM,CAAAO,eAAe,CAAG,KAAM,CAAAL,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC7C,MAAO,CAAAE,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACpC,MAAO,CAAAD,CAAC,CAACE,YAAY,CAAGD,CAAC,CAACC,YAAY,CACxC,CAAC,CAAC,CACJ,CAEA,cAAe,CAAAC,gBAAgBA,CAACC,MAAM,CAAE,CACtC,GAAG,CAAC,MAAO,MAAM,CAAAV,KAAK,IAAAC,MAAA,CAAIJ,OAAO,cAAa,CAC5Cc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAC,kBACjB,CAAC,CACDC,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC5B,CAAC,CAAC,CACF,CACA,MAAMM,GAAG,CAAE,CACT,MAAO,CACLC,EAAE,CAAE,KACN,CAAC,CACH,CACF,CAEA,cAAe,CAAAC,eAAeA,CAACC,EAAE,CAAE,CACjC;AACA;AACA,GAAG,CAAC,MAAO,MAAM,CAAAnB,KAAK,IAAAC,MAAA,CAAIJ,OAAO,eAAAI,MAAA,CAAakB,EAAE,EAAI,CAClDR,MAAM,CAAE,QACV,CAAC,CAAC,CACF,CAAE,MAAMS,KAAK,CAAE,CACb,MAAO,CACLH,EAAE,CAAE,KACN,CAAC,CACH,CACF,CAEA,OACEnB,cAAc,CACdK,eAAe,CACfM,gBAAgB,CAChBS,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}