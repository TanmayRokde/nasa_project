{"ast":null,"code":"const API_URl = 'http://localhost:8000';\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URl}/planets`);\n  return await response.json();\n}\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URl}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URl}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n}\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  try {\n    return await fetch(`${API_URl}/launches/${id}`, {\n      method: 'delete'\n    });\n  } catch (error) {\n    return {\n      ok: false\n    };\n  }\n}\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"names":["API_URl","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id","error"],"sources":["/Users/tanmayrokde/Documents/nasa project/client/src/hooks/requests.js"],"sourcesContent":["const API_URl = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n\n  const response = await fetch(`${API_URl}/planets`);\n  return await response.json();\n\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URl}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{return await fetch(`${API_URl}/launches`, {\n    method: \"post\",\n    headers :{\n      \"Content-Type\":'application/json',\n    },\n    body:JSON.stringify(launch),\n  })\n  }\n  catch(err) {\n    return {\n      ok: false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  try{return await fetch(`${API_URl}/launches/${id}`, {\n    method :'delete',\n  })\n  } catch(error) {\n    return {\n      ok :false,\n    }\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,eAAeC,cAAcA,CAAA,EAAG;EAE9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,UAAU,CAAC;EAClD,OAAO,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;AAE9B;AAEA,eAAeC,eAAeA,CAAA,EAAG;EAC/B;EACA;EACA,MAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;EACnD,MAAMM,eAAe,GAAG,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7C,OAAOE,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACpC,OAAOD,CAAC,CAACE,YAAY,GAAGD,CAAC,CAACC,YAAY;EACxC,CAAC,CAAC;AACJ;AAEA,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EACtC,IAAG;IAAC,OAAO,MAAMT,KAAK,CAAC,GAAGH,OAAO,WAAW,EAAE;MAC5Ca,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAC;MACjB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC5B,CAAC,CAAC;EACF,CAAC,CACD,OAAMM,GAAG,EAAE;IACT,OAAO;MACLC,EAAE,EAAE;IACN,CAAC;EACH;AACF;AAEA,eAAeC,eAAeA,CAACC,EAAE,EAAE;EACjC;EACA;EACA,IAAG;IAAC,OAAO,MAAMlB,KAAK,CAAC,GAAGH,OAAO,aAAaqB,EAAE,EAAE,EAAE;MAClDR,MAAM,EAAE;IACV,CAAC,CAAC;EACF,CAAC,CAAC,OAAMS,KAAK,EAAE;IACb,OAAO;MACLH,EAAE,EAAE;IACN,CAAC;EACH;AACF;AAEA,SACElB,cAAc,EACdI,eAAe,EACfM,gBAAgB,EAChBS,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}